[project]
name = "saucerbot"
version = "1.0.0"
description = "bot for the saucer groupme"
authors = [
    {name = "Clark Perkins",email = "clarkperkins@users.noreply.github.com"},
    {name = "Chris Reynolds",email = "christianbreynolds@users.noreply.github.com"}
]
readme = "README.rst"
requires-python = ">=3.11,<4.0"
dependencies = [
    "arrow",
    "beautifulsoup4",
    "click",
    "colorlog",
    "discord.py ~=2.0",
    "dj-database-url",
    "django ~=5.1.0",
    "django-split-settings",
    "djangorestframework ~=3.15.0",
    "gunicorn",
    "lowerpines @ git+https://github.com/bigfootjon/lowerpines.git@main",
    "psycopg",
    "pydantic",
    "pyyaml",
    "requests",
    "rollbar",
    "whitenoise",
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]

[tool.poetry.group.dev.dependencies]
black = "*"
django-stubs = "*"
djangorestframework-stubs = "*"
dpytest = "*"
isort = "*"
mypy = "*"
pylint = "*"
pylint-django = "*"
pytest = "*"
pytest-asyncio = "*"
pytest-cov = "*"
pytest-django = "*"
pytest-mock = "*"
types-pyyaml = "*"
types-requests = "*"

[tool.poetry.scripts]
saucerbot = 'saucerbot.cli:main'


[tool.black]
exclude = "migrations"



[tool.coverage.run]
branch = true
relative_files = true

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self.debug",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
]

ignore_errors = true

omit = [
    "saucerbot/*/migrations/*",
    "saucerbot/discord/main.py",
    "saucerbot/discord/overrides.py",
    "saucerbot/settings/environments/*",
]

[tool.coverage.html]
directory = "reports/coverage/html"
title = "saucerbot coverage"

[tool.coverage.xml]
output = "reports/coverage/coverage.xml"



[tool.django-stubs]
django_settings_module = "saucerbot.settings"
strict_settings = false



[tool.isort]
profile = "black"
skip_gitignore = true
known_third_party = "discord"



[tool.mypy]
plugins = [
    "mypy_django_plugin.main",
    "mypy_drf_plugin.main",
]

[[tool.mypy.overrides]]
module = "saucerbot.*.migrations.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    "bs4",
    "discord.ext.commands",
    "dj_database_url",
    "rollbar",
]
ignore_missing_imports = true



[tool.pylint.master]
ignore = [
    "CVS",
    "migrations",
]
load-plugins = [
    "pylint_django",
]
django-settings-module = "saucerbot.settings"

[tool.pylint.messages_control]
disable = [
    "invalid-name",
    "missing-docstring",
    "no-else-return",
    "too-few-public-methods",
]

[tool.pylint.import]
known-third-party = [
    "discord",
]

[tool.pylint.design]
# Maximum number of attributes for a class (see R0902).
max-attributes = 15
# Maximum number of parents for a class (see R0901).
max-parents = 15



[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "saucerbot.settings"
testpaths = [
    "tests",
]
