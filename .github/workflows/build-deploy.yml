name: Build & Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build & Test

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Spin up Containers
        run: |
          touch web.env
          docker-compose up -d db elasticsearch

      - name: Install Build Dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install --upgrade pipenv

      - name: Install Dependencies
        run: |
          pipenv install --system --deploy --dev

      - name: Run Checks
        run: |
          make check
        env:
          DJANGO_ENV: test

      - name: Run Tests
        run: |
          make test
        env:
          DJANGO_ENV: test
          DATABASE_URL: 'postgres://postgres:postgres@localhost:5432/postgres'
          BONSAI_URL: 'http://localhost:9200'

      - name: Run Integration Tests
        run: |
          make integration-test
        env:
          DJANGO_ENV: test
          DATABASE_URL: 'postgres://postgres:postgres@localhost:5432/postgres'
          BONSAI_URL: 'http://localhost:9200'

      - name: Stop Containers
        run: |
          docker-compose down

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: reports/tests/*.xml

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v1.6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy:
    name: Docker Build & Deploy

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: clarkperkins
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: clarkperkins/saucerbot
          tags: |
            type=edge,branch=main
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Docker Build and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
